#!/bin/bash

set -euo pipefail

# this script tags all new messages according to the list-id header of the message

echo "-------------------------"
echo "POST-NEW"

FILTER=tag:new
CLEAR=
VERBOSE=0
while [[ $# -gt 0 ]]; do
	case "$1" in
	-f|--filter)
		FILTER="$2"
		shift
		;;
	-c|--clear)
		CLEAR=--remove-all
		;;
	-v|--verbose)
		VERBOSE=1
		;;
	esac
	shift
done

TOTAL=$(notmuch count "$FILTER")
i=0

# some spammy lists should not be tagged
IGNORE=(
	"^eventim"
	"^mailin"
	"^mcsv"
	"^minhaclaro"
	"^sparkpostmail"
	"^xt"
	"^xxpnp"
)

# grab all new (or user defined $FILTER) messages and parse them individually
notmuch search --output=messages "$FILTER" | while read -r MESSAGE_ID; do
	if [[ $VERBOSE -gt 0 ]]; then
		echo $((++i)) / "$TOTAL"
		echo "$MESSAGE_ID"
	fi

	# grab the message headers
	MESSAGE=$(notmuch show --entire-thread=false --body=false --format=json "$MESSAGE_ID")
	LIST_ID=$(echo "$MESSAGE" | sed 's/"[Ll]ist-[Ii][Dd]"/"list-id"/g' | jq -r '.. | objects | select(has("headers")) | .headers."list-id"')

	# continue if there is no List-Id header present
	if [[ $LIST_ID == "null" ]]; then
		[[ -n $CLEAR ]] && notmuch tag $CLEAR -- "$MESSAGE_ID"
		continue
	fi

	[[ $VERBOSE -gt 0 ]] && echo "$LIST_ID"

	# parse the List-Id header
	NEW_TAG=$(
		echo "$LIST_ID" |
			awk -F ' ' '{
				if ($2 ~ "github")
					# List-ID: some/project <project.some.github.com>
					# -> github
					print "github"
				else if ($2 ~ "gitlab")
					# List-ID: some/project <MR.project.some.gitlab.provider.com>
					# -> gitlab
					print "gitlab"
				else if ($1 ~ "/")
					# List-ID: project/foo <foo.org>
					# -> project/foo
					print $1;
				else {
					# remove "<" and ">" characters from last section $NF
					gsub(/[<>]/, "", $NF);
					# split remaining by "." character
					split($NF, a, ".");
					if (length(a) < 2)
						# List-ID: foolist <foo>
						# -> foo.org
						print $NF;
					else if (length(a) == 2)
						# List-ID: foolist <foo.org>
						# -> foo
						print a[1];
					else if (a[length(a)] ~ "br")
						# List-ID: foolist <foo.brazilian.project.com.br>
						# -> project/foo
						print a[length(a)-2] "/" a[1]
					else
						# List-ID: foolist <foo.awesome.project.org>
						# -> project/foo
						print a[length(a)-1] "/" a[1]
				}
			}'
	)

	# if final parse output is foo/foo then make it foo
	IFS='/' read -r a b <<< "$NEW_TAG"
	[[ $a == "$b" ]] && NEW_TAG="$a"

	# check against the hard-coded patterns to be ignored
	for PATTERN in "${IGNORE[@]}"; do
		if [[ $NEW_TAG =~ $PATTERN ]]; then
			[[ $VERBOSE -gt 0 ]] && echo "$NEW_TAG is found in IGNORE list ($PATTERN)"
			continue
		fi
	done

	# tag the messages, optionally removing all previous tags
	[[ $VERBOSE -gt 0 ]] && set -x
	notmuch tag $CLEAR +"$NEW_TAG" -- "$MESSAGE_ID"
	set +x
done

# finish with some special logic around my own addresses
notmuch tag --batch <<EOF
# remove inbox tag if message not sent to me
-inbox -- tag:new and tag:inbox and not (to:rbm@opensuse.org or to:rbm@suse.com or to:ricardo.marliere@suse.com or to:rbmarliere@gmail.com or to:ricardo@marliere.net)
# remove new tag
-new -- tag:new
EOF
