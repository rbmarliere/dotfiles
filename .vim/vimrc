syntax on

let g:mapleader=" "
let g:c_syntax_for_h=1

set background=light

set autoread
set backspace=indent,eol,start
set encoding=utf-8
set grepformat=%f:%l:%c:%m
set helpheight=9999
set hidden
set hlsearch
set incsearch
set laststatus=2
set list
set listchars=tab:·\ ,trail:\ 
"set listchars=tab:░\ ,trail:\ 
"set list listchars=tab:▸\ ,trail:·,precedes:←,extends:→,eol:↲,nbsp:␣,space:~
set mouse=a
set number
set relativenumber
set ruler
set showtabline=2
set statusline=%{expand('%:h')}/%t\ [%{strlen(&fenc)?&fenc:'none'},%{&ff}]\ %h%m%r%y%=%c,%l/%L\ %P
set tags+=.git/tags,tags,$HOME/.tags
set title
set updatetime=50
set sessionoptions=curdir,folds,globals,help,tabpages,terminal,winsize

set autoindent
set noexpandtab
set nosmarttab
set shiftround
set shiftwidth=8
set smartindent
set softtabstop=8
set tabstop=8

set backup
set bdir=$HOME/.cache/vim/bkp/
set undodir=$HOME/.cache/vim/und/
set undofile

set noswapfile
" set dir=$HOME/.cache/vim/swp/

nnoremap - :Ex<CR>
nnoremap <C-d> <C-d>zz
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <C-u> <C-u>zz
nnoremap <C-w><C-t> :tabnew<CR>
nnoremap <C-w>C :tabclose<CR>
nnoremap <C-w>z <C-w><Bar><C-w>_
nnoremap <C-w>h :vertical resize +10<CR>
nnoremap <C-w>j :resize -10<CR>
nnoremap <C-w>k :resize +10<CR>
nnoremap <C-w>l :vertical resize -10<CR>
nnoremap <Leader><Space> :nohlsearch<CR>
nnoremap <Leader>P O<Esc>pk<CR>
nnoremap <Leader>S :%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>
vnoremap <Leader>S y:%s/\zs<C-r>"\ze/<C-r>"/gI<Left><Left><Left>
nnoremap <Leader>W :w !sudo tee % > /dev/null<CR>
nnoremap <Leader>X :!chmod +x %<CR>
nnoremap <Leader>p :pu<CR>
nnoremap <Leader>w :w<CR>
nnoremap <expr><silent> <Bar> v:count == 0 ? "<C-W>v<C-W><Right>" : ":<C-U>normal! 0".v:count."<Bar><CR>"
nnoremap <expr><silent> _ v:count == 0 ? "<C-W>s<C-W><Down>"  : ":<C-U>normal! ".v:count."_<CR>"
nnoremap <silent> <Leader>fws :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>
nnoremap N Nzzzv
nnoremap Y y$
nnoremap _ <C-W>s<C-W><Down>
nnoremap gp `[v`]
nnoremap n nzzzv
noremap <Leader><Leader>y "*y
noremap <Leader>y "+y
vnoremap <Leader>s :sort<CR>
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
xnoremap <Leader><Leader>p "_dP<CR>

" https://vim.fandom.com/wiki/Highlight_unwanted_spaces#Highlighting_with_the_match_command
highlight ExtraWhitespace ctermbg=red guibg=red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
