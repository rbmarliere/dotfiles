#!/bin/bash

set -euo pipefail

HOST=$(uname -p)
ROOT=
ARCH=$HOST
DEBOOTSTRAP=/usr/sbin/debootstrap
DPKG=/usr/bin/dpkg
EXEC=
DOTFILES=1

usage() {
	echo
	echo "usage: $0 [options]"
	echo
	echo "  -h		display this message"
	echo "  -r		target path to build the root filesystem"
	echo "  -a		target architecture (default: $HOST)"
	echo "  -e		extra command to run in the root"
	echo "  -n		don't install dotfiles"
	echo
}

die() {
	echo "ERROR: $1" >&2
	exit 1
}

while getopts "hr:a:e:n" OPT; do
	case $OPT in
	h)
		usage
		exit 0
		;;
	r) ROOT="$OPTARG" ;;
	a) ARCH="$OPTARG" ;;
	e) EXEC="$OPTARG" ;;
	n) DOTFILES=0 ;;
	?)
		usage
		exit 1
		;;
	esac
done

[[ -f $DEBOOTSTRAP ]] || "$DEBOOTSTRAP not found"
[[ -f $DPKG ]] || "$DPKG not found"
[[ -n $ROOT ]] || die "no target path specified"

if [[ $ARCH == "$HOST" ]]; then
	sudo $DEBOOTSTRAP sid "$ROOT"
else
	sudo $DEBOOTSTRAP --arch "$ARCH" --foreign sid "$ROOT"
	sudo chroot "$ROOT" bash -c "/debootstrap/debootstrap --second-stage"
fi

# base
DEPS=(make build-essential flex bison pkg-config)
# virtme-init
DEPS+=(busybox kbd)
# kselftests
DEPS+=(build-essential flex bison libasound2-dev libcap-ng-dev libcap-dev libnuma-dev libmnl-dev pkg-config rsync libpopt-dev libssl-dev libelf-dev clang liburing-dev libfuse3-dev libfuse-dev)
# dotfiles
DEPS+=(git make stow)

sudo chroot "$ROOT" bash -c "apt install -y ${DEPS[*]}"

if [[ $DOTFILES -gt 0 ]]; then
	sudo chroot "$ROOT" bash -c "git clone https://github.com/rbmarliere/dotfiles ~/dotfiles && make -C ~/dotfiles"
fi

if [[ -n ${EXEC[*]} ]]; then
	sudo chroot "$ROOT" bash -ic "${EXEC[@]}"
fi
