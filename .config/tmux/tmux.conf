source-file -q $HOME/.config/tmux/autoload

# https://wiki.archlinux.org/title/Sway#Failed_to_connect_to_a_Wayland_server
set-option -g update-environment "DISPLAY WAYLAND_DISPLAY SWAYSOCK SSH_AUTH_SOCK DBUS_SESSION_BUS_ADDRESS"

# set -g default-terminal "tmux-256color"
# you probably don't want to set this here, but instead in ~/.ssh/config:
# Host *
# 	SetEnv TERM=xterm-256color

set-option -g status-left " "
set-option -g status-right-length 70
set-option -g status-right "[#{session_name}] #(hostname) %H:%M %d-%b-%y"
set-option -g default-shell /bin/bash
set-option -g escape-time 0
set-option -g focus-events on
set-option -g history-limit 102400
set-option -g mode-keys vi
set-option -g mouse on
set-option -g renumber-windows on
set-option -g repeat-time 0
set-option -g set-titles on
if-shell '[ -n "$SSH_CONNECTION" ]' \
    'set-option -g set-titles-string "#{host}: #(basename #{session_name})"' \
    'set-option -g set-titles-string "#(basename #{session_name})"'
set-option -g status-fg color232
set-option -sa terminal-features ",foot:RGB"

#set-hook -g after-split-window "select-layout even-horizontal"
bind-key = select-layout even-vertical

bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"
bind-key ^ last-window
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key H resize-pane -L +50
bind-key J resize-pane -D +10
bind-key K resize-pane -U +10
bind-key L resize-pane -R +50
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key r run "tmux source-file ~/.config/tmux/tmux.conf"
bind-key Enter choose-window -F "#{window_index}: #{window_name}" "join-pane -v -t %%"
bind-key c-w choose-window -F "#{window_index}: #{window_name}" "swap-window -t %1"
bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key X confirm-before -p "Kill window #W? (y/n)" kill-window
bind-key Q confirm-before -p "Kill session #S? (y/n)" kill-session
bind-key / copy-mode \; send-key ?
bind-key f run "tmux neww '~/.local/bin/tmux_loader'"
bind-key S run "tmux send 'stty cols #{pane_width} rows #{pane_height}' Enter"
#bind-key N run "~/.local/bin/tmux_popup 'vi ~/notes/imm'"

set-option -g set-clipboard on
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"
bind-key -T copy-mode-vi Escape send-keys -X cancel

# This could be imported as plugin but I use $is_vim too for focus events
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

if-shell '[ "$TERM" != "linux" ]' {
    set-option -g pane-active-border-style "fg=default bg=default"
    set-option -g pane-border-style "fg=default bg=default"
    set-option -g window-style 'bg=default'
    set-option -g window-active-style 'bg=default'
    set-option -g focus-events on
    set-hook -g pane-focus-in 'if-shell "$is_vim" "set window-active-style bg=default" "set window-active-style bg=#f8f7f5"'
    set-hook -g pane-focus-out "set window-active-style bg=default"
    set-hook -g window-renamed 'if-shell "echo #{window_name} | grep -q ^nvim$" "set window-active-style bg=default" "set window-active-style bg=#f8f7f5"'
}

set-hook -g alert-bell 'run-shell "notify-send \"#{session_name}:#{window_name}\@#{host}\" || exit 0"'
set-option -g bell-action other
set-option -g monitor-bell on
set-option -g visual-bell off
set-option -g visual-activity off
